{"version":3,"sources":["output.js","area.js","App.js","serviceWorker.js","index.js"],"names":["Plus","props","Term","power","coefficient","Fragment","CubicTerm","QuadraticTerm","LinearTerm","ConstantTerm","needsConcatination","data","get","Polynomial","Output","polynomial","bounds","algorithm","high_low","area","area_lib","require","algo","resizedTextbox","width","height","Area","handleUpper","event","new_val","Number","target","value","setState","prevState","lower","upper","handleLower","handleConstant","constant","handleLinear","linear","handleQuadratic","quadratic","handleCubic","cubic","handleStep","step","handleAlgorithmChange","selectedAlgorithm","console","log","state","cmap","Map","this","poly1","bounds1","Bounds","coefficientMap","toString","evaluate","midpoint","name_alt","trapezoid","simpson","eval_chosen_algo","areaUnderCurve","algorithmOptions","label","className","style","type","min","max","onChange","for","name","options","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaa015a9.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Plus(props) {\n  return \"+\"\n}\n\nfunction Term({ power, coefficient = null }) {\n  if (power === 0) {\n    return <React.Fragment> {coefficient}</React.Fragment>\n  }\n  else if (power === 1) {\n    return <React.Fragment> {coefficient}x</React.Fragment>\n  }\n  else {\n    return <React.Fragment> {coefficient}x<sup>{power}</sup></React.Fragment>\n  }\n}\n\nfunction CubicTerm({ coefficient }) {\n  if (coefficient === 0) {\n    return null\n  }\n  if (coefficient === 1) {\n    return (<Term power={3} />);\n  }\n\n  return (<Term power={3} coefficient={coefficient} />)\n}\n\nfunction QuadraticTerm({ coefficient }) {\n  if (coefficient === 0) {\n    return null\n  }\n  if (coefficient === 1) {\n    return (<Term power={2} />);\n  }\n  return (<Term power={2} coefficient={coefficient} />);\n}\n\nfunction LinearTerm({ coefficient }) {\n  if (coefficient === 0) {\n    return null\n  }\n  if (coefficient === 1) {\n    return (<Term power={1} />);\n  }\n  return (<Term power={1} coefficient={coefficient} />);\n}\n\nfunction ConstantTerm({ coefficient }) {\n  if (coefficient === 0) {\n    return <React.Fragment />\n  }\n  return (<Term power={0} coefficient={coefficient} />);\n}\n\nfunction needsConcatination(power, data) {\n  //if (data.get(power-1) < 0)\n  //  return false\n  switch (power) {\n    case 3:\n      return data.get(3) && data.get(2)\n    case 2:\n      return (data.get(1) && (data.get(3) || data.get(2)))\n    case 1:\n      return (data.get(0) && (data.get(3) || data.get(2) || data.get(1)))\n    case 0:\n      return false\n    default:\n      return false\n  }\n}\n\nfunction Polynomial({ data }) {\n  return (\n    <React.Fragment>\n      <span>f(x) = </span>\n      <CubicTerm coefficient={data.get(3)} /> {needsConcatination(3, data) ? <Plus /> : null}\n      <QuadraticTerm coefficient={data.get(2)} /> {needsConcatination(2, data) ? <Plus /> : null}\n      <LinearTerm coefficient={data.get(1)} /> {needsConcatination(1, data) ? <Plus /> : null}\n      <ConstantTerm coefficient={data.get(0)} />\n    </React.Fragment>\n  )\n}\n\nfunction Output({ data }) {\n  return (\n    <div>\n      <ul>\n        <li>\n          <React.Fragment>\n            <span>Polynomial: </span>\n            <Polynomial data={data.polynomial} />\n          </React.Fragment>\n        </li>\n        <li>\n          Bounds:\n          {data.bounds}\n        </li>\n        <li>\n          Algorithm:\n          {data.algorithm}\n        </li>\n        <li>\n          High_Low:\n          {data.high_low}\n        </li>\n        <li>\n          Area:\n          {data.area}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\n\nexport default Output;\n","import React from 'react';\nimport './App.css';\nimport Output from './output';\nimport Select from 'react-select'\n\nconst area_lib = require('area-under-curve/area_lib')\nconst algo = require('area-under-curve/algorithm')\nconst resizedTextbox = { width: \"40px\", height: \"30px\" };\n\nclass Area extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      constant: 0,\n      linear: 0,\n      quadratic: 0,\n      cubic: 0,\n      lower: 0,\n      upper: 10,\n      step: 0.1,\n      selectedAlgorithm: null\n    }\n  }\n  handleUpper = (event) => {\n    let new_val = Number(event.target.value);\n    this.setState(prevState => ((new_val > prevState.lower) ? { upper: new_val } : { upper: prevState.upper }));\n  };\n\n  handleLower = (event) => {\n    let new_val = Number(event.target.value);\n    this.setState(prevState => ((new_val < prevState.upper) ? { lower: new_val } : { lower: prevState.lower }));\n  };\n\n  handleConstant = (event) => this.setState({ constant: event.target.value });\n  handleLinear = (event) => this.setState({ linear: event.target.value });\n  handleQuadratic = (event) => this.setState({ quadratic: event.target.value });\n  handleCubic = (event) => this.setState({ cubic: event.target.value });\n  handleStep = (event) => this.setState({ step: event.target.value });\n\n  evaluate() {\n    const cmap = new Map([[0, Number(this.state.constant)], [1, Number(this.state.linear)], [2, Number(this.state.quadratic)], [3, Number(this.state.cubic)],]);\n    const poly1 = new area_lib.Polynomial(cmap);\n    const bounds1 = new area_lib.Bounds(Number(this.state.lower), Number(this.state.upper), Number(this.state.step));\n    var data = {}\n    data[\"polynomial\"] = poly1.coefficientMap\n    data[\"bounds\"] = bounds1.toString()\n    data[\"high_low\"] = [poly1.evaluate(this.state.lower), poly1.evaluate(this.state.upper)].toString()\n    algo.midpoint.name_alt = \"midpoint\";\n    algo.trapezoid.name_alt = \"trapezoid\";\n    algo.simpson.name_alt = \"simpson\";\n\n    let eval_chosen_algo = algo.midpoint;\n    console.log(this.state.selectedAlgorithm)\n    if (this.state.selectedAlgorithm) {\n      eval_chosen_algo = this.state.selectedAlgorithm.value\n    }\n    data[\"algorithm\"] = eval_chosen_algo.name_alt;\n    data[\"area\"] = area_lib.areaUnderCurve(poly1, bounds1, eval_chosen_algo)\n    return data;\n  }\n\n  handleAlgorithmChange = selectedAlgorithm => {\n    this.setState(\n      { selectedAlgorithm },\n      () => console.log(`Option selected:`, this.state.selectedAlgorithm)\n    );\n  };\n\n  render() {\n    const { selectedAlgorithm } = this.state;\n    const algorithmOptions = [{ value: algo.midpoint, label: \"midpoint\" },\n    { value: algo.trapezoid, label: \"trapezoid\" },\n    { value: algo.simpson, label: \"simpson\" }\n  ]\n\n    return (\n      <div className=\"App\">\n        <h1>Area under curve</h1>\n        <h2>Polynomial</h2>\n        <p>f(x) =\n        <input style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.cubic} onChange={this.handleCubic} />x<sup>3</sup> +\n        <input style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.quadratic} onChange={this.handleQuadratic} />x<sup>2</sup> +\n        <input style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.linear} onChange={this.handleLinear} />x +\n        <input style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.constant} onChange={this.handleConstant} />\n        </p>\n        <h2>Step Size</h2>\n        <input style={resizedTextbox} type=\"number\" min=\"0.1\" max=\"1.0\" step=\"0.1\" value={this.state.step} onChange={this.handleStep} />\n        <h2>Bounds</h2>\n        <label for=\"upper\">Upper</label> <input name=\"upper\" style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.lower} onChange={this.handleLower} />\n        <label for=\"lower\">Lower</label> <input name=\"lower\" style={resizedTextbox} type=\"number\" min=\"-10\" max=\"10\" step=\"1\" value={this.state.upper} onChange={this.handleUpper} />\n\n        <h2>Algorithm</h2>\n        <React.Fragment>\n\n          <Select options={algorithmOptions}\n            className='select'\n            width='200px'\n            value={selectedAlgorithm}\n            onChange={this.handleAlgorithmChange} />\n        </React.Fragment>\n        <h2>Output</h2>\n        <Output data={\n          this.evaluate()} />\n      </div>\n    )\n  }\n}\n\nexport default Area;\n","import React from 'react';\nimport './App.css';\nimport Area from './area';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Area />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}